{
  "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
  "name": "Variable Map Adapter I",
  "scenarios": [
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should read from map",
      "description": "should read from map",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with delegate is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with delegate is deployed"
                },
                {
                  "value": "process_with_delegate",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_delegate"
                  }
                },
                {
                  "value": "${readFromVariableMap}",
                  "argumentInfo": {
                    "argumentName": "delegateExpression",
                    "formattedValue": "${readFromVariableMap}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 61873007
            },
            {
              "name": "get process definition",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get process definition"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 275098
            },
            {
              "name": "process is started with variables",
              "words": [
                {
                  "value": "process is started with variables"
                },
                {
                  "value": "process_with_delegate",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_delegate"
                  }
                },
                {
                  "value": "{\n  Double Variable \u003d\u003e Untyped value \u002712.0\u0027, isTransient \u003d false\n  Complex Variable \u003d\u003e Untyped value \u0027ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)\u0027, isTransient \u003d false\n  List Of String Variable \u003d\u003e Untyped value \u0027[Hello, World]\u0027, isTransient \u003d false\n  Short Variable \u003d\u003e Untyped value \u002711\u0027, isTransient \u003d false\n  Map Of String to Date Variable \u003d\u003e Untyped value \u0027{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}\u0027, isTransient \u003d false\n  Date Variable \u003d\u003e Untyped value \u0027Thu Dec 12 17:42:18 CET 2019\u0027, isTransient \u003d false\n  Long Variable \u003d\u003e Untyped value \u0027812\u0027, isTransient \u003d false\n  Set Of String Variable \u003d\u003e Untyped value \u0027[Kermit, Piggy]\u0027, isTransient \u003d false\n  Int Variable \u003d\u003e Untyped value \u0027123\u0027, isTransient \u003d false\n  String Variable \u003d\u003e Untyped value \u0027value\u0027, isTransient \u003d false\n  Boolean Variable \u003d\u003e Untyped value \u0027true\u0027, isTransient \u003d false\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n  Double Variable \u003d\u003e Untyped value \u002712.0\u0027, isTransient \u003d false\n  Complex Variable \u003d\u003e Untyped value \u0027ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)\u0027, isTransient \u003d false\n  List Of String Variable \u003d\u003e Untyped value \u0027[Hello, World]\u0027, isTransient \u003d false\n  Short Variable \u003d\u003e Untyped value \u002711\u0027, isTransient \u003d false\n  Map Of String to Date Variable \u003d\u003e Untyped value \u0027{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}\u0027, isTransient \u003d false\n  Date Variable \u003d\u003e Untyped value \u0027Thu Dec 12 17:42:18 CET 2019\u0027, isTransient \u003d false\n  Long Variable \u003d\u003e Untyped value \u0027812\u0027, isTransient \u003d false\n  Set Of String Variable \u003d\u003e Untyped value \u0027[Kermit, Piggy]\u0027, isTransient \u003d false\n  Int Variable \u003d\u003e Untyped value \u0027123\u0027, isTransient \u003d false\n  String Variable \u003d\u003e Untyped value \u0027value\u0027, isTransient \u003d false\n  Boolean Variable \u003d\u003e Untyped value \u0027true\u0027, isTransient \u003d false\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 36359915
            },
            {
              "name": "variables had value",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "variables had value"
                },
                {
                  "value": "{Double Variable\u003d12.0, Complex Variable\u003dComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019), List Of String Variable\u003d[Hello, World], Short Variable\u003d11, Map Of String to Date Variable\u003d{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}, Date Variable\u003dThu Dec 12 17:42:18 CET 2019, Long Variable\u003d812, Set Of String Variable\u003d[Kermit, Piggy], Int Variable\u003d123, String Variable\u003dvalue, Boolean Variable\u003dtrue}",
                  "argumentInfo": {
                    "argumentName": "readValues",
                    "formattedValue": "{Double Variable\u003d12.0, Complex Variable\u003dComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019), List Of String Variable\u003d[Hello, World], Short Variable\u003d11, Map Of String to Date Variable\u003d{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}, Date Variable\u003dThu Dec 12 17:42:18 CET 2019, Long Variable\u003d812, Set Of String Variable\u003d[Kermit, Piggy], Int Variable\u003d123, String Variable\u003dvalue, Boolean Variable\u003dtrue}"
                  }
                },
                {
                  "value": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@30ed2a26, value), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1bf10539, Thu Dec 12 17:42:18 CET 2019), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1e406cbe, 11), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@141a10bf, 123), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@4dffa400, 812), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@5e34a84b, 12.0), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@438c0aaf, true), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@7577589, ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)), (io.holunda.camunda.bpm.data.factory.ListVariableFactory@37b80ec7, [Hello, World]), (io.holunda.camunda.bpm.data.factory.SetVariableFactory@4cb58e8b, [Kermit, Piggy]), (io.holunda.camunda.bpm.data.factory.MapVariableFactory@6f4f2cc0, {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019})]",
                  "argumentInfo": {
                    "argumentName": "variablesWithValue",
                    "formattedValue": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@30ed2a26, value), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1bf10539, Thu Dec 12 17:42:18 CET 2019), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1e406cbe, 11), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@141a10bf, 123), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@4dffa400, 812), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@5e34a84b, 12.0), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@438c0aaf, true), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@7577589, ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)), (io.holunda.camunda.bpm.data.factory.ListVariableFactory@37b80ec7, [Hello, World]), (io.holunda.camunda.bpm.data.factory.SetVariableFactory@4cb58e8b, [Kermit, Piggy]), (io.holunda.camunda.bpm.data.factory.MapVariableFactory@6f4f2cc0, {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019})]"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 668624
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 104848727
        }
      ],
      "durationInNanos": 104848727,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on set removeLocal exception",
      "description": "should throw correct NSO on set removeLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.removeLocal(SetReadWriteAdapterVariableMap.java:51)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on set removeLocal exception(VariableMapAdapterITest.kt:145)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 5588960
        }
      ],
      "durationInNanos": 5588960
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on set target",
      "description": "should throw correct WVT exception on set target",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading Set Of String Variable: Wrong set type detected, expected java.util.Date, but was not found in [Kermit, Piggy]",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.set.AbstractSetReadWriteAdapter.getOrNull(AbstractSetReadWriteAdapter.java:51)",
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.getOptional(SetReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on set target(VariableMapAdapterITest.kt:254)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3863433
        }
      ],
      "durationInNanos": 3863433
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on map optional",
      "description": "should throw correct WVT exception on map optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of type Map from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.AbstractMapReadWriteAdapter.getOrNull(AbstractMapReadWriteAdapter.java:70)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.getOptional(MapReadWriteAdapterVariableMap.java:33)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on map optional(VariableMapAdapterITest.kt:289)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 5811601
        }
      ],
      "durationInNanos": 5811601
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on list optional",
      "description": "should throw correct WVT exception on list optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of type List from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.list.AbstractListReadWriteAdapter.getOrNull(AbstractListReadWriteAdapter.java:60)",
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.getOptional(ListReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on list optional(VariableMapAdapterITest.kt:199)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4931584
        }
      ],
      "durationInNanos": 4931584
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should remove from map",
      "description": "should remove from map",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with delegate is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with delegate is deployed"
                },
                {
                  "value": "process_with_delegate",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_delegate"
                  }
                },
                {
                  "value": "${readOptionalFromVariableScope}",
                  "argumentInfo": {
                    "argumentName": "delegateExpression",
                    "formattedValue": "${readOptionalFromVariableScope}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 48141085
            },
            {
              "name": "get process definition",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get process definition"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 203153
            },
            {
              "name": "process is started with variables",
              "words": [
                {
                  "value": "process is started with variables"
                },
                {
                  "value": "process_with_delegate",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_delegate"
                  }
                },
                {
                  "value": "{\n  Double Variable \u003d\u003e Untyped value \u002712.0\u0027, isTransient \u003d false\n  Complex Variable \u003d\u003e Untyped value \u0027ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)\u0027, isTransient \u003d false\n  Short Variable \u003d\u003e Untyped value \u002711\u0027, isTransient \u003d false\n  Date Variable \u003d\u003e Untyped value \u0027Thu Dec 12 17:42:18 CET 2019\u0027, isTransient \u003d false\n  Long Variable \u003d\u003e Untyped value \u0027812\u0027, isTransient \u003d false\n  Int Variable \u003d\u003e Untyped value \u0027123\u0027, isTransient \u003d false\n  Boolean Variable \u003d\u003e Untyped value \u0027true\u0027, isTransient \u003d false\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n  Double Variable \u003d\u003e Untyped value \u002712.0\u0027, isTransient \u003d false\n  Complex Variable \u003d\u003e Untyped value \u0027ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)\u0027, isTransient \u003d false\n  Short Variable \u003d\u003e Untyped value \u002711\u0027, isTransient \u003d false\n  Date Variable \u003d\u003e Untyped value \u0027Thu Dec 12 17:42:18 CET 2019\u0027, isTransient \u003d false\n  Long Variable \u003d\u003e Untyped value \u0027812\u0027, isTransient \u003d false\n  Int Variable \u003d\u003e Untyped value \u0027123\u0027, isTransient \u003d false\n  Boolean Variable \u003d\u003e Untyped value \u0027true\u0027, isTransient \u003d false\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 18639775
            },
            {
              "name": "variables had not value",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "variables had not value"
                },
                {
                  "value": "{Double Variable\u003dOptional[12.0], Complex Variable\u003dOptional[ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)], List Of String Variable\u003dOptional.empty, Short Variable\u003dOptional[11], Map Of String to Date Variable\u003dOptional.empty, Date Variable\u003dOptional[Thu Dec 12 17:42:18 CET 2019], Long Variable\u003dOptional[812], Set Of String Variable\u003dOptional.empty, Int Variable\u003dOptional[123], String Variable\u003dOptional.empty, Boolean Variable\u003dOptional[true]}",
                  "argumentInfo": {
                    "argumentName": "readValues",
                    "formattedValue": "{Double Variable\u003dOptional[12.0], Complex Variable\u003dOptional[ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)], List Of String Variable\u003dOptional.empty, Short Variable\u003dOptional[11], Map Of String to Date Variable\u003dOptional.empty, Date Variable\u003dOptional[Thu Dec 12 17:42:18 CET 2019], Long Variable\u003dOptional[812], Set Of String Variable\u003dOptional.empty, Int Variable\u003dOptional[123], String Variable\u003dOptional.empty, Boolean Variable\u003dOptional[true]}"
                  }
                },
                {
                  "value": "io.holunda.camunda.bpm.data.factory.BasicVariableFactory@30ed2a26, io.holunda.camunda.bpm.data.factory.ListVariableFactory@37b80ec7, io.holunda.camunda.bpm.data.factory.SetVariableFactory@4cb58e8b, io.holunda.camunda.bpm.data.factory.MapVariableFactory@6f4f2cc0",
                  "argumentInfo": {
                    "argumentName": "variableWithValue",
                    "formattedValue": "io.holunda.camunda.bpm.data.factory.BasicVariableFactory@30ed2a26, io.holunda.camunda.bpm.data.factory.ListVariableFactory@37b80ec7, io.holunda.camunda.bpm.data.factory.SetVariableFactory@4cb58e8b, io.holunda.camunda.bpm.data.factory.MapVariableFactory@6f4f2cc0"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 30746
            },
            {
              "name": "variables had value",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "variables had value"
                },
                {
                  "value": "{Double Variable\u003dOptional[12.0], Complex Variable\u003dOptional[ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)], List Of String Variable\u003dOptional.empty, Short Variable\u003dOptional[11], Map Of String to Date Variable\u003dOptional.empty, Date Variable\u003dOptional[Thu Dec 12 17:42:18 CET 2019], Long Variable\u003dOptional[812], Set Of String Variable\u003dOptional.empty, Int Variable\u003dOptional[123], String Variable\u003dOptional.empty, Boolean Variable\u003dOptional[true]}",
                  "argumentInfo": {
                    "argumentName": "readValues",
                    "formattedValue": "{Double Variable\u003dOptional[12.0], Complex Variable\u003dOptional[ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)], List Of String Variable\u003dOptional.empty, Short Variable\u003dOptional[11], Map Of String to Date Variable\u003dOptional.empty, Date Variable\u003dOptional[Thu Dec 12 17:42:18 CET 2019], Long Variable\u003dOptional[812], Set Of String Variable\u003dOptional.empty, Int Variable\u003dOptional[123], String Variable\u003dOptional.empty, Boolean Variable\u003dOptional[true]}"
                  }
                },
                {
                  "value": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@4dffa400, Optional[812])]",
                  "argumentInfo": {
                    "argumentName": "variablesWithValue",
                    "formattedValue": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@4dffa400, Optional[812])]"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 689944
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 73217996
        }
      ],
      "durationInNanos": 73217996,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on set target optional",
      "description": "should throw correct WVT exception on set target optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading Set Of String Variable: Wrong set type detected, expected java.util.Date, but was not found in [Kermit, Piggy]",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.set.AbstractSetReadWriteAdapter.getOrNull(AbstractSetReadWriteAdapter.java:51)",
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.getOptional(SetReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on set target optional(VariableMapAdapterITest.kt:265)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3647597
        }
      ],
      "durationInNanos": 3647597
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on list removeLocal exception",
      "description": "should throw correct NSO on list removeLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.removeLocal(ListReadWriteAdapterVariableMap.java:51)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on list removeLocal exception(VariableMapAdapterITest.kt:139)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3633549
        }
      ],
      "durationInNanos": 3633549
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should write to map",
      "description": "should write to map",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with delegate is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with delegate is deployed"
                },
                {
                  "value": "process_with_delegate",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_delegate"
                  }
                },
                {
                  "value": "${readFromVariableScope}",
                  "argumentInfo": {
                    "argumentName": "delegateExpression",
                    "formattedValue": "${readFromVariableScope}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 47492527
            },
            {
              "name": "get process definition",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get process definition"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 172691
            },
            {
              "name": "process is started with variables",
              "words": [
                {
                  "value": "process is started with variables"
                },
                {
                  "value": "process_with_delegate",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_delegate"
                  }
                },
                {
                  "value": "{\n  Double Variable \u003d\u003e Value \u002712.0\u0027 of type \u0027PrimitiveValueType[double]\u0027, isTransient\u003dfalse\n  Complex Variable \u003d\u003e Untyped value \u0027ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)\u0027, isTransient \u003d false\n  List Of String Variable \u003d\u003e Untyped value \u0027[Hello, World]\u0027, isTransient \u003d false\n  Short Variable \u003d\u003e Value \u002711\u0027 of type \u0027PrimitiveValueType[short]\u0027, isTransient\u003dfalse\n  Map Of String to Date Variable \u003d\u003e Untyped value \u0027{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}\u0027, isTransient \u003d false\n  Date Variable \u003d\u003e Value \u0027Thu Dec 12 17:42:18 CET 2019\u0027 of type \u0027PrimitiveValueType[date]\u0027, isTransient\u003dfalse\n  Long Variable \u003d\u003e Value \u0027812\u0027 of type \u0027PrimitiveValueType[long]\u0027, isTransient\u003dfalse\n  Set Of String Variable \u003d\u003e Untyped value \u0027[Kermit, Piggy]\u0027, isTransient \u003d false\n  Int Variable \u003d\u003e Value \u0027123\u0027 of type \u0027PrimitiveValueType[integer]\u0027, isTransient\u003dfalse\n  String Variable \u003d\u003e Value \u0027value\u0027 of type \u0027PrimitiveValueType[string]\u0027, isTransient\u003dfalse\n  Boolean Variable \u003d\u003e Value \u0027true\u0027 of type \u0027PrimitiveValueType[boolean]\u0027, isTransient\u003dfalse\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n  Double Variable \u003d\u003e Value \u002712.0\u0027 of type \u0027PrimitiveValueType[double]\u0027, isTransient\u003dfalse\n  Complex Variable \u003d\u003e Untyped value \u0027ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)\u0027, isTransient \u003d false\n  List Of String Variable \u003d\u003e Untyped value \u0027[Hello, World]\u0027, isTransient \u003d false\n  Short Variable \u003d\u003e Value \u002711\u0027 of type \u0027PrimitiveValueType[short]\u0027, isTransient\u003dfalse\n  Map Of String to Date Variable \u003d\u003e Untyped value \u0027{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}\u0027, isTransient \u003d false\n  Date Variable \u003d\u003e Value \u0027Thu Dec 12 17:42:18 CET 2019\u0027 of type \u0027PrimitiveValueType[date]\u0027, isTransient\u003dfalse\n  Long Variable \u003d\u003e Value \u0027812\u0027 of type \u0027PrimitiveValueType[long]\u0027, isTransient\u003dfalse\n  Set Of String Variable \u003d\u003e Untyped value \u0027[Kermit, Piggy]\u0027, isTransient \u003d false\n  Int Variable \u003d\u003e Value \u0027123\u0027 of type \u0027PrimitiveValueType[integer]\u0027, isTransient\u003dfalse\n  String Variable \u003d\u003e Value \u0027value\u0027 of type \u0027PrimitiveValueType[string]\u0027, isTransient\u003dfalse\n  Boolean Variable \u003d\u003e Value \u0027true\u0027 of type \u0027PrimitiveValueType[boolean]\u0027, isTransient\u003dfalse\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 35921969
            },
            {
              "name": "variables had value",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "variables had value"
                },
                {
                  "value": "{Double Variable\u003d12.0, Complex Variable\u003dComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019), List Of String Variable\u003d[Hello, World], Short Variable\u003d11, Map Of String to Date Variable\u003d{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}, Date Variable\u003dThu Dec 12 17:42:18 CET 2019, Long Variable\u003d812, Set Of String Variable\u003d[Kermit, Piggy], Int Variable\u003d123, String Variable\u003dvalue, Boolean Variable\u003dtrue}",
                  "argumentInfo": {
                    "argumentName": "readValues",
                    "formattedValue": "{Double Variable\u003d12.0, Complex Variable\u003dComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019), List Of String Variable\u003d[Hello, World], Short Variable\u003d11, Map Of String to Date Variable\u003d{Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}, Date Variable\u003dThu Dec 12 17:42:18 CET 2019, Long Variable\u003d812, Set Of String Variable\u003d[Kermit, Piggy], Int Variable\u003d123, String Variable\u003dvalue, Boolean Variable\u003dtrue}"
                  }
                },
                {
                  "value": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@30ed2a26, value), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1bf10539, Thu Dec 12 17:42:18 CET 2019), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1e406cbe, 11), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@141a10bf, 123), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@4dffa400, 812), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@5e34a84b, 12.0), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@438c0aaf, true), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@7577589, ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)), (io.holunda.camunda.bpm.data.factory.ListVariableFactory@37b80ec7, [Hello, World]), (io.holunda.camunda.bpm.data.factory.SetVariableFactory@4cb58e8b, [Kermit, Piggy]), (io.holunda.camunda.bpm.data.factory.MapVariableFactory@6f4f2cc0, {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019})]",
                  "argumentInfo": {
                    "argumentName": "variablesWithValue",
                    "formattedValue": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@30ed2a26, value), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1bf10539, Thu Dec 12 17:42:18 CET 2019), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@1e406cbe, 11), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@141a10bf, 123), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@4dffa400, 812), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@5e34a84b, 12.0), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@438c0aaf, true), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@7577589, ComplexDataStructure(stringValue\u003dstring, intValue\u003d17, dateValue\u003dThu Dec 12 17:42:18 CET 2019)), (io.holunda.camunda.bpm.data.factory.ListVariableFactory@37b80ec7, [Hello, World]), (io.holunda.camunda.bpm.data.factory.SetVariableFactory@4cb58e8b, [Kermit, Piggy]), (io.holunda.camunda.bpm.data.factory.MapVariableFactory@6f4f2cc0, {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019})]"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 711047
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 89182095
        }
      ],
      "durationInNanos": 89182095,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on list setLocal exception",
      "description": "should throw correct NSO on list setLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.setLocal(ListReadWriteAdapterVariableMap.java:41)",
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.setLocal(ListReadWriteAdapterVariableMap.java:13)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.setLocal(AbstractReadWriteAdapter.java:27)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on list setLocal exception(VariableMapAdapterITest.kt:115)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4304593
        }
      ],
      "durationInNanos": 4304593
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on map value optional",
      "description": "should throw correct WVT exception on map value optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading Map Of String to Date Variable: Wrong map type detected, expected Map\u003cjava.lang.String,java.lang.String, but was not found in {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.AbstractMapReadWriteAdapter.getOrNull(AbstractMapReadWriteAdapter.java:64)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.getOptional(MapReadWriteAdapterVariableMap.java:33)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on map value optional(VariableMapAdapterITest.kt:332)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3875814
        }
      ],
      "durationInNanos": 3875814
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on basic optional",
      "description": "should throw correct WVT exception on basic optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of class java.lang.Integer from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.basic.AbstractBasicReadWriteAdapter.getOrNull(AbstractBasicReadWriteAdapter.java:43)",
            "io.holunda.camunda.bpm.data.adapter.basic.ReadWriteAdapterVariableMap.getOptional(ReadWriteAdapterVariableMap.java:30)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on basic optional(VariableMapAdapterITest.kt:175)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4280115
        }
      ],
      "durationInNanos": 4280115
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on set optional",
      "description": "should throw correct WVT exception on set optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of type Set from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.set.AbstractSetReadWriteAdapter.getOrNull(AbstractSetReadWriteAdapter.java:56)",
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.getOptional(SetReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on set optional(VariableMapAdapterITest.kt:243)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4159947
        }
      ],
      "durationInNanos": 4159947
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on key map",
      "description": "should throw correct WVT exception on key map",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading Map Of String to Date Variable: Wrong map type detected, expected Map\u003cjava.util.Date,java.util.Date, but was not found in {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.AbstractMapReadWriteAdapter.getOrNull(AbstractMapReadWriteAdapter.java:64)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.getOptional(MapReadWriteAdapterVariableMap.java:33)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on key map(VariableMapAdapterITest.kt:300)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4780058
        }
      ],
      "durationInNanos": 4780058
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on basic removeLocal exception",
      "description": "should throw correct NSO on basic removeLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.basic.ReadWriteAdapterVariableMap.removeLocal(ReadWriteAdapterVariableMap.java:50)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on basic removeLocal exception(VariableMapAdapterITest.kt:133)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3505569
        }
      ],
      "durationInNanos": 3505569
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on set setLocal exception",
      "description": "should throw correct NSO on set setLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.setLocal(SetReadWriteAdapterVariableMap.java:41)",
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.setLocal(SetReadWriteAdapterVariableMap.java:13)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.setLocal(AbstractReadWriteAdapter.java:27)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on set setLocal exception(VariableMapAdapterITest.kt:121)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3730911
        }
      ],
      "durationInNanos": 3730911
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on set ",
      "description": "should throw correct WVT exception on set ",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of type Set from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.set.AbstractSetReadWriteAdapter.getOrNull(AbstractSetReadWriteAdapter.java:56)",
            "io.holunda.camunda.bpm.data.adapter.set.SetReadWriteAdapterVariableMap.getOptional(SetReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on set (VariableMapAdapterITest.kt:232)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4835675
        }
      ],
      "durationInNanos": 4835675
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on map setLocal exception",
      "description": "should throw correct NSO on map setLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.setLocal(MapReadWriteAdapterVariableMap.java:43)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.setLocal(MapReadWriteAdapterVariableMap.java:14)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.setLocal(AbstractReadWriteAdapter.java:27)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on map setLocal exception(VariableMapAdapterITest.kt:127)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4806682
        }
      ],
      "durationInNanos": 4806682
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on value map",
      "description": "should throw correct WVT exception on value map",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading Map Of String to Date Variable: Wrong map type detected, expected Map\u003cjava.lang.String,java.lang.String, but was not found in {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.AbstractMapReadWriteAdapter.getOrNull(AbstractMapReadWriteAdapter.java:64)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.getOptional(MapReadWriteAdapterVariableMap.java:33)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on value map(VariableMapAdapterITest.kt:321)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4648471
        }
      ],
      "durationInNanos": 4648471
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on basic",
      "description": "should throw correct WVT exception on basic",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of class java.lang.Integer from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.basic.AbstractBasicReadWriteAdapter.getOrNull(AbstractBasicReadWriteAdapter.java:43)",
            "io.holunda.camunda.bpm.data.adapter.basic.ReadWriteAdapterVariableMap.getOptional(ReadWriteAdapterVariableMap.java:30)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on basic(VariableMapAdapterITest.kt:163)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4667560
        }
      ],
      "durationInNanos": 4667560
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on list ",
      "description": "should throw correct WVT exception on list ",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of type List from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.list.AbstractListReadWriteAdapter.getOrNull(AbstractListReadWriteAdapter.java:60)",
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.getOptional(ListReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on list (VariableMapAdapterITest.kt:187)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4869949
        }
      ],
      "durationInNanos": 4869949
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on map key optional",
      "description": "should throw correct WVT exception on map key optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading Map Of String to Date Variable: Wrong map type detected, expected Map\u003cjava.util.Date,java.util.Date, but was not found in {Twelve\u003dThu Dec 12 17:42:18 CET 2019, Eleven\u003dThu Dec 12 17:42:18 CET 2019}",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.AbstractMapReadWriteAdapter.getOrNull(AbstractMapReadWriteAdapter.java:64)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.getOptional(MapReadWriteAdapterVariableMap.java:33)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on map key optional(VariableMapAdapterITest.kt:310)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 5036042
        }
      ],
      "durationInNanos": 5036042
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on map removeLocal exception",
      "description": "should throw correct NSO on map removeLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.removeLocal(MapReadWriteAdapterVariableMap.java:53)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on map removeLocal exception(VariableMapAdapterITest.kt:151)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 5201371
        }
      ],
      "durationInNanos": 5201371
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on map",
      "description": "should throw correct WVT exception on map",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading String Variable: Couldn\u0027t read value of type Map from value",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.map.AbstractMapReadWriteAdapter.getOrNull(AbstractMapReadWriteAdapter.java:70)",
            "io.holunda.camunda.bpm.data.adapter.map.MapReadWriteAdapterVariableMap.getOptional(MapReadWriteAdapterVariableMap.java:33)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on map(VariableMapAdapterITest.kt:277)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 3804591
        }
      ],
      "durationInNanos": 3804591
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct VNF exception",
      "description": "should throw correct VNF exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.VariableNotFoundException: Couldn\u0027t find required variable non-existent",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.lambda$get$0(AbstractReadWriteAdapter.java:32)",
            "java.util.Optional.orElseThrow(Optional.java:290)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct VNF exception(VariableMapAdapterITest.kt:103)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4009617
        }
      ],
      "durationInNanos": 4009617
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on list target",
      "description": "should throw correct WVT exception on list target",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading List Of String Variable: Wrong list type detected, expected java.util.Date, but was not found in [Hello, World]",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.list.AbstractListReadWriteAdapter.getOrNull(AbstractListReadWriteAdapter.java:55)",
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.getOptional(ListReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.get(AbstractReadWriteAdapter.java:32)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on list target(VariableMapAdapterITest.kt:211)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 5780529
        }
      ],
      "durationInNanos": 5780529
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct WVT exception on list target optional",
      "description": "should throw correct WVT exception on list target optional",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "io.holunda.camunda.bpm.data.adapter.WrongVariableTypeException: Error reading List Of String Variable: Wrong list type detected, expected java.util.Date, but was not found in [Hello, World]",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.list.AbstractListReadWriteAdapter.getOrNull(AbstractListReadWriteAdapter.java:55)",
            "io.holunda.camunda.bpm.data.adapter.list.ListReadWriteAdapterVariableMap.getOptional(ListReadWriteAdapterVariableMap.java:31)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct WVT exception on list target optional(VariableMapAdapterITest.kt:221)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 5185917
        }
      ],
      "durationInNanos": 5185917
    },
    {
      "className": "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest",
      "testMethodName": "should throw correct NSO on basic setLocal exception",
      "description": "should throw correct NSO on basic setLocal exception",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "success": false,
          "errorMessage": "java.lang.UnsupportedOperationException: Can\u0027t set a local variable on a variable map",
          "stackTrace": [
            "io.holunda.camunda.bpm.data.adapter.basic.ReadWriteAdapterVariableMap.setLocal(ReadWriteAdapterVariableMap.java:40)",
            "io.holunda.camunda.bpm.data.adapter.AbstractReadWriteAdapter.setLocal(AbstractReadWriteAdapter.java:27)",
            "io.holunda.camunda.bpm.data.itest.VariableMapAdapterITest.should throw correct NSO on basic setLocal exception(VariableMapAdapterITest.kt:109)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)",
            "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)",
            "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)",
            "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)",
            "com.tngtech.jgiven.junit.JGivenMethodRule$1.evaluate(JGivenMethodRule.java:73)",
            "org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)",
            "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)",
            "org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)",
            "org.junit.rules.RunRules.evaluate(RunRules.java:20)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)",
            "org.junit.runners.Suite.runChild(Suite.java:128)",
            "org.junit.runners.Suite.runChild(Suite.java:27)",
            "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
            "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)",
            "com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)",
            "com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)",
            "com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)"
          ],
          "durationInNanos": 4822312
        }
      ],
      "durationInNanos": 4822312
    }
  ],
  "tagMap": {}
}
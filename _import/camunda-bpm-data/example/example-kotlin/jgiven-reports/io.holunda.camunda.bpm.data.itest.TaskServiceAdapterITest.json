{
  "className": "io.holunda.camunda.bpm.data.itest.TaskServiceAdapterITest",
  "name": "Task Service Adapter I",
  "scenarios": [
    {
      "className": "io.holunda.camunda.bpm.data.itest.TaskServiceAdapterITest",
      "testMethodName": "should write local variables to task service adapter",
      "description": "should write local variables to task service adapter",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with user task and listener is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with user task and listener is deployed"
                },
                {
                  "value": "process_with_user_task_and_listener",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_user_task_and_listener"
                  }
                },
                {
                  "value": "user_task",
                  "argumentInfo": {
                    "argumentName": "taskDefinitionKey",
                    "formattedValue": "user_task"
                  }
                },
                {
                  "value": "${readLocalFromDelegateTask}",
                  "argumentInfo": {
                    "argumentName": "delegateExpression",
                    "formattedValue": "${readLocalFromDelegateTask}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 5695900
            },
            {
              "name": "get process definition",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "get process definition"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 322100
            },
            {
              "name": "process is started with variables",
              "words": [
                {
                  "value": "process is started with variables"
                },
                {
                  "value": "process_with_user_task_and_listener",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "process_with_user_task_and_listener"
                  }
                },
                {
                  "value": "{\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 36500
            },
            {
              "name": "process waits in task",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "process waits in task"
                },
                {
                  "value": "user_task",
                  "argumentInfo": {
                    "argumentName": "taskDefinitionKey",
                    "formattedValue": "user_task"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 143997500
            },
            {
              "name": "task is accessed in user task",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "task is accessed in user task"
                },
                {
                  "value": "(org.camunda.bpm.engine.TaskService, kotlin.String) -\u003e kotlin.Unit",
                  "argumentInfo": {
                    "argumentName": "taskServiceTaskCallback",
                    "formattedValue": "(org.camunda.bpm.engine.TaskService, kotlin.String) -\u003e kotlin.Unit"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 47100
            },
            {
              "name": "task is completed",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "task is completed"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 93532600
            },
            {
              "name": "variables had value",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "variables had value"
                },
                {
                  "value": "{Double Variable\u003d14.0, Complex Variable\u003dComplexDataStructure(stringValue\u003dfoobar, intValue\u003d12, dateValue\u003dThu Dec 12 16:31:48 CET 2019), List Of String Variable\u003d[Foo, Bar], Short Variable\u003d12, Map Of String to Date Variable\u003d{Ten\u003dThu Dec 12 16:31:48 CET 2019, Nine\u003dThu Dec 12 16:31:48 CET 2019}, Date Variable\u003dThu Dec 12 16:31:48 CET 2019, Long Variable\u003d815, Set Of String Variable\u003d[Homer, Marge], Int Variable\u003d124, String Variable\u003dlocalValue, Boolean Variable\u003dfalse}",
                  "argumentInfo": {
                    "argumentName": "readValues",
                    "formattedValue": "{Double Variable\u003d14.0, Complex Variable\u003dComplexDataStructure(stringValue\u003dfoobar, intValue\u003d12, dateValue\u003dThu Dec 12 16:31:48 CET 2019), List Of String Variable\u003d[Foo, Bar], Short Variable\u003d12, Map Of String to Date Variable\u003d{Ten\u003dThu Dec 12 16:31:48 CET 2019, Nine\u003dThu Dec 12 16:31:48 CET 2019}, Date Variable\u003dThu Dec 12 16:31:48 CET 2019, Long Variable\u003d815, Set Of String Variable\u003d[Homer, Marge], Int Variable\u003d124, String Variable\u003dlocalValue, Boolean Variable\u003dfalse}"
                  }
                },
                {
                  "value": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@5ccbeb64, localValue), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@6d9f7a80, Thu Dec 12 16:31:48 CET 2019), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@59252cb6, 12), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@31d0e481, 124), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@3243b914, 815), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@241e8ea6, 14.0), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@542e560f, false), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@626c44e7, ComplexDataStructure(stringValue\u003dfoobar, intValue\u003d12, dateValue\u003dThu Dec 12 16:31:48 CET 2019)), (io.holunda.camunda.bpm.data.factory.ListVariableFactory@4dc8caa7, [Foo, Bar]), (io.holunda.camunda.bpm.data.factory.SetVariableFactory@1d730606, [Homer, Marge]), (io.holunda.camunda.bpm.data.factory.MapVariableFactory@3bcbb589, {Ten\u003dThu Dec 12 16:31:48 CET 2019, Nine\u003dThu Dec 12 16:31:48 CET 2019})]",
                  "argumentInfo": {
                    "argumentName": "variablesWithValue",
                    "formattedValue": "[(io.holunda.camunda.bpm.data.factory.BasicVariableFactory@5ccbeb64, localValue), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@6d9f7a80, Thu Dec 12 16:31:48 CET 2019), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@59252cb6, 12), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@31d0e481, 124), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@3243b914, 815), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@241e8ea6, 14.0), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@542e560f, false), (io.holunda.camunda.bpm.data.factory.BasicVariableFactory@626c44e7, ComplexDataStructure(stringValue\u003dfoobar, intValue\u003d12, dateValue\u003dThu Dec 12 16:31:48 CET 2019)), (io.holunda.camunda.bpm.data.factory.ListVariableFactory@4dc8caa7, [Foo, Bar]), (io.holunda.camunda.bpm.data.factory.SetVariableFactory@1d730606, [Homer, Marge]), (io.holunda.camunda.bpm.data.factory.MapVariableFactory@3bcbb589, {Ten\u003dThu Dec 12 16:31:48 CET 2019, Nine\u003dThu Dec 12 16:31:48 CET 2019})]"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 17203300
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 1770058200
        }
      ],
      "durationInNanos": 1770058200,
      "executionStatus": "SUCCESS"
    }
  ],
  "tagMap": {}
}
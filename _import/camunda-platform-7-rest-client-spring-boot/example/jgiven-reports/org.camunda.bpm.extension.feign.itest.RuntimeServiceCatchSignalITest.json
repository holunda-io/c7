{
  "className": "org.camunda.bpm.extension.feign.itest.RuntimeServiceCatchSignalITest",
  "name": "Catch Signal",
  "scenarios": [
    {
      "className": "org.camunda.bpm.extension.feign.itest.RuntimeServiceCatchSignalITest",
      "testMethodName": "should signal waiting instance by execution id and signal name",
      "description": "should signal waiting instance by execution id and signal name",
      "tagIds": [
        "org.camunda.bpm.extension.feign.itest.RuntimeServiceCategory"
      ],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with intermediate signal catch event is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with intermediate signal catch event is deployed"
                },
                {
                  "value": "KEYe369acda486d4b69bd9de963bac4ee18",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEYe369acda486d4b69bd9de963bac4ee18"
                  }
                },
                {
                  "value": "user-task",
                  "argumentInfo": {
                    "argumentName": "userTaskId",
                    "formattedValue": "user-task"
                  }
                },
                {
                  "value": "mySignal3",
                  "argumentInfo": {
                    "argumentName": "signalName",
                    "formattedValue": "mySignal3"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 36713022
            },
            {
              "name": "process is started by key",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "process is started by key"
                },
                {
                  "value": "KEYe369acda486d4b69bd9de963bac4ee18",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEYe369acda486d4b69bd9de963bac4ee18"
                  }
                },
                {
                  "value": "my-business-key1",
                  "argumentInfo": {
                    "argumentName": "businessKey",
                    "formattedValue": "my-business-key1"
                  }
                },
                {
                  "value": "caseInstanceId1",
                  "argumentInfo": {
                    "argumentName": "caseInstanceId",
                    "formattedValue": "caseInstanceId1"
                  }
                },
                {
                  "value": "{\n  VAR1 \u003d\u003e Untyped value \u0027VAL1\u0027, isTransient \u003d false\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n  VAR1 \u003d\u003e Untyped value \u0027VAL1\u0027, isTransient \u003d false\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 76543
            },
            {
              "name": "execution is waiting for signal",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "execution is waiting for signal"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 18507331
            },
            {
              "name": "get remote service",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get remote service"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 408077
            },
            {
              "name": "get execution",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "get execution"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 215369
            },
            {
              "name": "process instance exists",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "process instance exists"
                },
                {
                  "value": "KEYe369acda486d4b69bd9de963bac4ee18",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEYe369acda486d4b69bd9de963bac4ee18"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "processDefinitionId",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "containingSimpleProcessVariables",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit",
                  "argumentInfo": {
                    "argumentName": "processInstanceAssertions",
                    "formattedValue": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 284723250
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 4416912545
        }
      ],
      "durationInNanos": 4416912545,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "org.camunda.bpm.extension.feign.itest.RuntimeServiceCatchSignalITest",
      "testMethodName": "should signal waiting instance by execution id and signal name and set variables",
      "description": "should signal waiting instance by execution id and signal name and set variables",
      "tagIds": [
        "org.camunda.bpm.extension.feign.itest.RuntimeServiceCategory"
      ],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with intermediate signal catch event is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with intermediate signal catch event is deployed"
                },
                {
                  "value": "KEYb2b5c18e4c55409c82e1cebef8a224a3",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEYb2b5c18e4c55409c82e1cebef8a224a3"
                  }
                },
                {
                  "value": "user-task",
                  "argumentInfo": {
                    "argumentName": "userTaskId",
                    "formattedValue": "user-task"
                  }
                },
                {
                  "value": "mySignal4",
                  "argumentInfo": {
                    "argumentName": "signalName",
                    "formattedValue": "mySignal4"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 69465
            },
            {
              "name": "process is started by key",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "process is started by key"
                },
                {
                  "value": "KEYb2b5c18e4c55409c82e1cebef8a224a3",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEYb2b5c18e4c55409c82e1cebef8a224a3"
                  }
                },
                {
                  "value": "my-business-key1",
                  "argumentInfo": {
                    "argumentName": "businessKey",
                    "formattedValue": "my-business-key1"
                  }
                },
                {
                  "value": "caseInstanceId1",
                  "argumentInfo": {
                    "argumentName": "caseInstanceId",
                    "formattedValue": "caseInstanceId1"
                  }
                },
                {
                  "value": "{\n  VAR1 \u003d\u003e Untyped value \u0027VAL1\u0027, isTransient \u003d false\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n  VAR1 \u003d\u003e Untyped value \u0027VAL1\u0027, isTransient \u003d false\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 70149
            },
            {
              "name": "execution is waiting for signal",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "execution is waiting for signal"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 11229335
            },
            {
              "name": "get remote service",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get remote service"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 244597
            },
            {
              "name": "get execution",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "get execution"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 153913
            },
            {
              "name": "process instance exists",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "process instance exists"
                },
                {
                  "value": "KEYb2b5c18e4c55409c82e1cebef8a224a3",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEYb2b5c18e4c55409c82e1cebef8a224a3"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "processDefinitionId",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "containingSimpleProcessVariables",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit",
                  "argumentInfo": {
                    "argumentName": "processInstanceAssertions",
                    "formattedValue": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 34700872
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 291175254
        }
      ],
      "durationInNanos": 291175254,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "org.camunda.bpm.extension.feign.itest.RuntimeServiceCatchSignalITest",
      "testMethodName": "should signal waiting instance and set variables",
      "description": "should signal waiting instance and set variables",
      "tagIds": [
        "org.camunda.bpm.extension.feign.itest.RuntimeServiceCategory"
      ],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with intermediate signal catch event is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with intermediate signal catch event is deployed"
                },
                {
                  "value": "KEY6ae82fb1038c4ae8a932d5615bb17d65",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEY6ae82fb1038c4ae8a932d5615bb17d65"
                  }
                },
                {
                  "value": "user-task",
                  "argumentInfo": {
                    "argumentName": "userTaskId",
                    "formattedValue": "user-task"
                  }
                },
                {
                  "value": "mySignal2",
                  "argumentInfo": {
                    "argumentName": "signalName",
                    "formattedValue": "mySignal2"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 67840
            },
            {
              "name": "process is started by key",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "process is started by key"
                },
                {
                  "value": "KEY6ae82fb1038c4ae8a932d5615bb17d65",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEY6ae82fb1038c4ae8a932d5615bb17d65"
                  }
                },
                {
                  "value": "my-business-key1",
                  "argumentInfo": {
                    "argumentName": "businessKey",
                    "formattedValue": "my-business-key1"
                  }
                },
                {
                  "value": "caseInstanceId1",
                  "argumentInfo": {
                    "argumentName": "caseInstanceId",
                    "formattedValue": "caseInstanceId1"
                  }
                },
                {
                  "value": "{\n  VAR1 \u003d\u003e Untyped value \u0027VAL1\u0027, isTransient \u003d false\n}",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "{\n  VAR1 \u003d\u003e Untyped value \u0027VAL1\u0027, isTransient \u003d false\n}"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 41743377
            },
            {
              "name": "get remote service",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get remote service"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 240485
            },
            {
              "name": "process instance exists",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "process instance exists"
                },
                {
                  "value": "KEY6ae82fb1038c4ae8a932d5615bb17d65",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEY6ae82fb1038c4ae8a932d5615bb17d65"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "processDefinitionId",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "containingSimpleProcessVariables",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit",
                  "argumentInfo": {
                    "argumentName": "processInstanceAssertions",
                    "formattedValue": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 38734952
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 244615339
        }
      ],
      "durationInNanos": 244615339,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "org.camunda.bpm.extension.feign.itest.RuntimeServiceCatchSignalITest",
      "testMethodName": "should signal waiting instance",
      "description": "should signal waiting instance",
      "tagIds": [
        "org.camunda.bpm.extension.feign.itest.RuntimeServiceCategory"
      ],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "process with intermediate signal catch event is deployed",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "process with intermediate signal catch event is deployed"
                },
                {
                  "value": "KEY80245919c3f9435eba186867289e2038",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEY80245919c3f9435eba186867289e2038"
                  }
                },
                {
                  "value": "user-task",
                  "argumentInfo": {
                    "argumentName": "userTaskId",
                    "formattedValue": "user-task"
                  }
                },
                {
                  "value": "mySignal1",
                  "argumentInfo": {
                    "argumentName": "signalName",
                    "formattedValue": "mySignal1"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 68169
            },
            {
              "name": "process is started by key",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "process is started by key"
                },
                {
                  "value": "KEY80245919c3f9435eba186867289e2038",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEY80245919c3f9435eba186867289e2038"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "businessKey",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "caseInstanceId",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "variables",
                    "formattedValue": "null"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 69030
            },
            {
              "name": "get remote service",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "get remote service"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 270411
            },
            {
              "name": "process instance exists",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "process instance exists"
                },
                {
                  "value": "KEY80245919c3f9435eba186867289e2038",
                  "argumentInfo": {
                    "argumentName": "processDefinitionKey",
                    "formattedValue": "KEY80245919c3f9435eba186867289e2038"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "processDefinitionId",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "null",
                  "argumentInfo": {
                    "argumentName": "containingSimpleProcessVariables",
                    "formattedValue": "null"
                  }
                },
                {
                  "value": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit",
                  "argumentInfo": {
                    "argumentName": "processInstanceAssertions",
                    "formattedValue": "(org.camunda.bpm.engine.runtime.ProcessInstance, org.camunda.bpm.extension.feign.itest.AssertStage\u003c*, org.camunda.bpm.engine.RuntimeService\u003e) -\u003e kotlin.Unit"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 19739862
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "success": true,
          "durationInNanos": 213763110
        }
      ],
      "durationInNanos": 213763110,
      "executionStatus": "SUCCESS"
    }
  ],
  "tagMap": {
    "org.camunda.bpm.extension.feign.itest.RuntimeServiceCategory": {
      "fullType": "org.camunda.bpm.extension.feign.itest.RuntimeServiceCategory",
      "type": "RuntimeServiceCategory",
      "name": "RuntimeService",
      "description": "",
      "href": ""
    }
  }
}